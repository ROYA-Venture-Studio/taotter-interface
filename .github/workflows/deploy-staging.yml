name: Deploy Frontend to Staging VM

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout Frontend code
      uses: actions/checkout@v4

    - name: Set Permissions on Deployment Directory
      # Ensure the final deployment directory for frontend code is owned by azureuser and writable.
      # This prevents permission denied errors when copying or cleaning.
      run: |
        DEPLOY_DIR="/home/azureuser/taotter-interface"
        sudo mkdir -p "${DEPLOY_DIR}"
        sudo chown -R azureuser:azureuser "${DEPLOY_DIR}"
        sudo chmod -R u+rwx "${DEPLOY_DIR}"

    - name: Copy Frontend .env file for Build
      # Copies the environment variables (like VITE_API_URL) from the VM to the build workspace.
      # This is crucial because frontend builds embed these variables.
      run: |
        ENV_FILE_VM_PATH="/home/azureuser/taotter-interface/.env"
        BUILD_TARGET_DIR="${{ github.workspace }}"
        sudo cp "${ENV_FILE_VM_PATH}" "${BUILD_TARGET_DIR}/.env"
      # (Remove the echo/cat statements once you confirm it's working)

    - name: Install Frontend Dependencies and Build
      # Installs all necessary Node.js packages and runs the Vite build process.
      run: |
        npm install
        npm run build # Creates the 'dist' folder in the runner's workspace
      working-directory: ${{ github.workspace }} # Ensures commands run in the checked out repo root

    - name: Clean and Copy Frontend Build to VM Destination
      # Removes the old deployed frontend build and copies the new one.
      run: |
        DEPLOY_DIR="/home/azureuser/taotter-interface"
        sudo rm -rf "${DEPLOY_DIR}/dist" # Clean old build
        sudo cp -R "${{ github.workspace }}/dist" "${DEPLOY_DIR}/" # Copy new build

    - name: Restart PM2 Frontend Process
      # Restarts the PM2 process to serve the newly deployed frontend.
      run: |
        cd /home/azureuser/
        pm2 restart taotter-frontend
